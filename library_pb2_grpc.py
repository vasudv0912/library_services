# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import library_pb2 as library__pb2


class LibraryStub(object):
    """Service Definition
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetBookDetails = channel.unary_unary(
                '/library.Library/GetBookDetails',
                request_serializer=library__pb2.GetBookDetailsRequest.SerializeToString,
                response_deserializer=library__pb2.GetBookDetailsReply.FromString,
                )
        self.GetAvailableBooks = channel.unary_unary(
                '/library.Library/GetAvailableBooks',
                request_serializer=library__pb2.GetAvailableBooksRequest.SerializeToString,
                response_deserializer=library__pb2.GetAvailableBooksReply.FromString,
                )


class LibraryServicer(object):
    """Service Definition
    """

    def GetBookDetails(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAvailableBooks(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_LibraryServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetBookDetails': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBookDetails,
                    request_deserializer=library__pb2.GetBookDetailsRequest.FromString,
                    response_serializer=library__pb2.GetBookDetailsReply.SerializeToString,
            ),
            'GetAvailableBooks': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAvailableBooks,
                    request_deserializer=library__pb2.GetAvailableBooksRequest.FromString,
                    response_serializer=library__pb2.GetAvailableBooksReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'library.Library', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Library(object):
    """Service Definition
    """

    @staticmethod
    def GetBookDetails(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/library.Library/GetBookDetails',
            library__pb2.GetBookDetailsRequest.SerializeToString,
            library__pb2.GetBookDetailsReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAvailableBooks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/library.Library/GetAvailableBooks',
            library__pb2.GetAvailableBooksRequest.SerializeToString,
            library__pb2.GetAvailableBooksReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
